package org.crafter.engine.gui.razorfont;


import java.nio.ByteBuffer;

public interface FontLoadingCalls {

    interface StringCall {
        /**
         * Allows automatic render target (OpenGL, Vulkan, Metal, DX) passthrough instantiation.
         * This can basically pass a file location off to your rendering engine and autoload it into memory.
         */
        void fontLoadCallString(String fileLocation);
    }

    interface RawCall {
        /**
         * Allows automatic render target (OpenGL, Vulkan, Metal, DX) DIRECT instantiation.
         * This allows the render engine to AUTOMATICALLY upload the image as RAW data.
         * byte[] = raw data. int = width. int = height.
         */
        void fontLoadCallRaw(ByteBuffer raw, int width, int height);
    }
}


------------------------------------------------

package org.crafter.engine.gui.razorfont;

public interface RenderCall {
    /**
     * Allows automatic render target (OpenGL, Vulkan, Metal, DX) DIRECT instantiation.
     * This allows the render engine to AUTOMATICALLY upload the image as RAW data.
     * byte[] = raw data. int = width. int = height.
     */
    void draw(RawData rawData);
}

-----------------------------------------------------


package org.crafter.engine.gui.razorfont;

public class RawData {
    /// A simple struct to get the font data for the shader
    public float[] vertexPositions;
    public float[] textureCoordinates;
    public int[]    indices;
    public float[] colors;
    public RawData(float[] vertexPositions, float[] textureCoordinates, int[] indices, float[] colors) {
        this.vertexPositions = vertexPositions;
        this.textureCoordinates = textureCoordinates;
        this.indices = indices;
        this.colors = colors;
    }
}
